'''На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.

1. Строится двоичная запись числа N.
2. К этой записи дописываются справа ещё два разряда по следующему правилу:
а) складываются все цифры двоичной записи, и остаток от деления суммы на 2 дописывается в конец числа (справа). 
Например, запись 11100 преобразуется в запись 111001;
б) над этой записью производятся те же действия — справа дописывается остаток от деления суммы цифр на 2.

Полученная таким образом запись (в ней на два разряда больше, чем в записи исходного числа N) является двоичной записью искомого числа R.

Укажите минимальное число R, которое превышает 43 и может являться результатом работы алгоритма. В ответе это число 
запишите в десятичной системе.

'1001' = 2
'11101' = 4

sm = 0

'111011'

'''

for n in range(1, 100):
    r = bin(n)[2:]

    sm = r.count('1') % 2
    r = r + str(sm)

    sm = r.count('1') % 2
    r = r + str(sm)

    r = int(r, 2)
    if r > 43:
        print(r)


'''На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.

1. Строится двоичная запись числа N.
2. К этой записи дописываются справа ещё два разряда по следующему правилу: складываются все цифры двоичной записи:
а) если сумма нечетная, к числу дописывается 11,
б) если сумма четная, дописывается 00.

Полученная таким образом запись (в ней на два разряда больше, чем в записи исходного числа N) является двоичной записью искомого 
числа R. Укажите такое наименьшее число R, которое превышает 114 и может являться результатом работы алгоритма. 
В ответе это число запишите в десятичной системе счисления.

'''
for n in range(1,100):
    r=bin(n)[2:]
    m=r.count('1')
    if m%2 !=0:
        r=r+'11'
    if m%2==0:
        r=r+'00'
    r=int(r,2)
    if r>114:
        print(r)


'''Автомат обрабатывает натуральное число N (0 ≤ N ≤ 255) по следующему алгоритму.

1. Строится восьмибитная двоичная запись числа N.
2. Все цифры двоичной записи заменяются на противоположные (0 на 1, 1 на 0).
3. Полученное число переводится в десятичную запись.
4. Из нового числа вычитается исходное, полученная разность выводится на экран.

Какое число нужно ввести в автомат, чтобы в результате получилось 133?
'''
for n in range(0,256):
    r=bin(n)[2:].zfill(8)
    r=r.replace('0','-')
    r=r.replace('1','0')
    r=r.replace('-','1')
    r=int(r,2)
    s=r-n
    if s==133:
        print(n)
    

'''Автомат обрабатывает натуральное число N по следующему алгоритму.

1. Строится двоичная запись числа N.
2. Удаляется первая слева единица и все следующие непосредственно за ней нули. Если после этого в числе не остаётся цифр, 
результат этого действия считается равным нулю.
3. Полученное число переводится в десятичную запись.
4. Новое число вычитается из исходного, полученная разность выводится на экран. 

Сколько разных значений будет показано на экране автомата при последовательном вводе всех натуральных чисел от 100 до 3000?
    
    0123
r = 1010

'''

a = []

for n in range(100,3001):
    r=bin(n)[2:]
    r=r[1:]
    r=int(r,2)
    s=n - r

    if s not in a:
        a.append(s)

print(len(a))

'''На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R:

    Строится двоичная запись числа N
    Далее эта запись обрабатывается так:
    а) если число нечётное, к двоичной записи слева дописывается 1, а последние две цифры справа заменяются на 10
    б) если число чётное, к двоичной записи справа дописывается 1, а первые две цифры слева заменяются на 10
    Таким образом получается двоичная запись искомого числа RR
    Результат переводится в десятичную систему и выводится на экран

Укажите минимальное число R, которое может быть результатом этого алгоритма при условии, что N не меньше 33. В ответе запишите это число в десятичной системе счисления.


101011

10 1011 1
'''
m = []
for n in range(33,50):
    s=bin(n)[2:]
    if n%2!=0:
        s='1'+ s[:-2] + '10'
    elif n%2==0:
        s='10' + s[2:] + '1'
    s=int(s,2)
    m.append(s)

print(min(m))



'''Автомат получает на вход трёхзначное число. По этому числу строится новое число по следующим правилам.

1. Складываются первая и вторая, а также вторая и третья цифры исходного числа.
2. Полученные два числа записываются друг за другом в порядке убывания (без разделителей).

Пример. Исходное число: 348. Суммы: 3 + 4 = 7; 4 + 8 = 12. Результат: 127. 
Укажите наименьшее число, в результате обработки которого автомат выдаст число 1412.

    012
n = 578

1 + 2
2 + 3

n[0] = '5'
n[1] = '7'


'5' + '7' = '57'
'''


for n in range(100, 1000):
    s = str(n)
    x1 = int(s[0]) + int(s[1])
    x2 = int(s[1]) + int(s[2])
    if x1 > x2:
        s = str(x1) + str(x2)
    else:
        s = str(x2) + str(x1)
    
    if s == '1412':
        print(n)
    

'''Автомат получает на вход четырёхзначное число. По этому числу строится новое число по следующим правилам.

1. Складываются отдельно первая и вторая цифры, вторая и третья цифры, a также третья и четвёртая цифры.
2. Из полученных трёх чисел выбираются два наибольших и записываются друг за другом в порядке неубывания без разделителей.

Пример. Исходное число: 9575. Суммы: 9 + 5 = 14; 5 + 7 = 12; 7 + 5 = 12. Наибольшие суммы: 14, 12. Результат: 1214.

Укажите наибольшее число, при обработке которого автомат выдаёт результат 1515.


m = [12, 15, 7]

     0   1  2
m = [7, 12, 15]


1215

'''


for n in range(1000, 10000):
    s = str(n)
    x1=int(s[0])+int(s[1])
    x2=int(s[1])+int(s[2])
    x3=int(s[2])+int(s[3])

    m = [x1, x2, x3]
    m = sorted(m)

    s = str(m[1]) + str(m[2])

    if s == '1515':
        print(n)
   



"""На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
1. Строится двоичная запись числа N.
2. Далее эта запись обрабатывается по следующему правилу:
а) если сумма цифр в двоичной записи числа чётная, то к этой записи справа дописывается 0, а затем два левых разряда заменяются на 10;
б) если сумма цифр в двоичной записи числа нечётная, то к этой записи справа дописывается 1, а затем два левых разряда заменяются на 11.
Полученная таким образом запись является двоичной записью искомого числа R.

Укажите минимальное число N, после обработки которого с помощью этого алгоритма получается число R, большее 480.
В ответе запишите это число в десятичной системе счисления.
"""

for n in range(1, 1000):
    r = bin(n)[2:]
    if r.count("1") % 2 == 0:
        r = "10" + r[2:] + "0"
    else:
        r = "11" + r[2:] + "1"
    r=int(r,2)
    if r>480:
        print(n)
        break
    
        
